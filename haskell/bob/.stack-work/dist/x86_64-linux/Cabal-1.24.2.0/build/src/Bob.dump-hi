
==================== FINAL INTERFACE ====================
2017-07-30 01:06:25.837441 UTC

interface bob-1.0.0.3-7xyVNrkmtkfFaDzQ2EHBfW:Bob 8002
  interface hash: e31d22ca4f0905e79c2f565196caee77
  ABI hash: 66dbbb39d3680fa7bc5e70d94faa493b
  export-list hash: 61950612294cf30957c06551336d824f
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: ab396f11155bd696ab63895436e6f1df
  sig of: Nothing
  used TH splices: False
  where
exports:
  Bob.responseFor
module dependencies:
package dependencies: base-4.9.1.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:Data.Char 01433d23661edb6e5ef1536ef1e6774c
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.List ab8c4e523e6c479c549d3bcd5fc4a439
import  -/  base-4.9.1.0:GHC.Unicode a175ecf20bf1272d9ae31337e7da43ab
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
ead4f7e2f0494587c4fdaa4ab80624fb
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Bob.$trModule2 Bob.$trModule1) -}
a5e5a3474153bbe93ebd3bc580cd84d8
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Bob"#) -}
40b64e6d94dbcb67caed7df2a84d0f68
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "bob-1.0.0.3-7xyVNrkmtkfFaDzQ2EHBfW"#) -}
bf6f5b79b20b6cfd23e4cff3b5114145
  responseFor :: GHC.Base.String -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (xs :: GHC.Base.String) ->
                 case xs of wild {
                   [] -> Bob.responseFor4
                   : ipv ipv1
                   -> case Bob.responseFor_go2
                             (GHC.Base.map
                                @ GHC.Types.Char
                                @ GHC.Types.Bool
                                GHC.Unicode.isSpace
                                wild) of wild1 {
                        GHC.Types.False
                        -> case GHC.Base.eqString
                                  wild
                                  (GHC.Base.map
                                     @ GHC.Types.Char
                                     @ GHC.Types.Char
                                     GHC.Unicode.toUpper
                                     wild) of wild2 {
                             GHC.Types.False
                             -> case Bob.responseFor_go1
                                       wild
                                       (GHC.List.lastError
                                          @ GHC.Types.Char) of wild3 { GHC.Types.C# y ->
                                case y of wild4 {
                                  DEFAULT -> Bob.responseFor3 '?'# -> Bob.responseFor2 } }
                             GHC.Types.True
                             -> case Bob.responseFor_go
                                       (GHC.Base.map
                                          @ GHC.Types.Char
                                          @ GHC.Types.Bool
                                          GHC.Unicode.isAlpha
                                          wild) of wild3 {
                                  GHC.Types.False
                                  -> case Bob.responseFor_go1
                                            wild
                                            (GHC.List.lastError
                                               @ GHC.Types.Char) of wild4 { GHC.Types.C# y ->
                                     case y of wild5 {
                                       DEFAULT -> Bob.responseFor3 '?'# -> Bob.responseFor2 } }
                                  GHC.Types.True -> Bob.responseFor1 } }
                        GHC.Types.True -> Bob.responseFor4 } }) -}
9cb709a3bcf079d4caab4212b5fee831
  responseFor1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Whoa, chill out!"#) -}
33d12228ac904e33a824b82065fc5ca9
  responseFor2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Sure."#) -}
8f9760d21b5600c883cc68277cae44fc
  responseFor3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Whatever."#) -}
7257b37df706fd7cc7dbeca10a2ee37d
  responseFor4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Fine. Be that way!"#) -}
d0a539d496856233e4b56c1dab105ef7
  responseFor_go :: [GHC.Types.Bool] -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S,1*U> -}
8cab6b5d5f043cad72dacdec8b230934
  responseFor_go1 ::
    [GHC.Types.Char] -> GHC.Types.Char -> GHC.Types.Char
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U(U)> -}
cfe5510de2de2bfd2a1d3b201eb01cb8
  responseFor_go2 :: [GHC.Types.Bool] -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S,1*U> -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

